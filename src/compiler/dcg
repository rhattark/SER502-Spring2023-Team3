program --> act_declaration.

act_declaration --> [act], scene_list, [end] , [act].

scene_list --> scene_declaration.
scene_list --> scene_declaration, scene_list.

scene_declaration --> [scene], statement_list, [end], [scene].

statement_list --> statement.
statement_list --> statement, statement_list.
statement_list --> scene_declaration.

statement --> variable_declaration
           | assignment
           | print
           | conditional
           | ternary
           | traditional_for
           | traditional_while
           | range_for.

variable_declaration --> [let], datatype, assignment.

assignment --> identifier, [be], string, ['.'].
assignment --> identifier, [be], expression, ['.'].

datatype --> [numeral] | [verse] | [bool].

expression --> arithmetic_expression | boolean_expression.

arithmetic_expression --> arithmetic_term.
arithmetic_expression --> arithmetic_term, add_sub_operator, arithmetic_expression.


arithmetic_term --> arithmetic_factor.
arithmetic_term --> arithmetic_factor, mul_div_operator, arithmetic_term.

arithmetic_factor --> identifier
                   | number
                   | ['('], arithmetic_expression, [')'].


boolean_expression --> bool_literal.
boolean_expression --> identifier.
boolean_expression --> arithmetic_expression, comparison_operator, arithmetic_expression.
boolean_expression --> ['('], boolean_expression, [')'].

bool_literal --> [aye] | [nay].

print --> [sayeth], (identifier | string | bool_literal), ['.'].

conditional --> [if, it, be], boolean_expression, [then, thee, shall], statement_list, [otherwise], statement_list, [end, if].

ternary --> boolean_expression, ['?'], statement_list, [':'], statement_list, ['.'].

traditional_for --> [forsooth], (assignment | variable_declaration), ['.'], boolean_expression, ['.'], assignment, [doth], statement_list, [end, for].

traditional_while --> [whilst, it, be], boolean_expression, [doth], statement_list, [end, whilst].

range_for --> [forsooth,',', let], identifier, [be], number, [to], number, [by, step, size, of], number, ['.'], [doth], statement_list, [end, for].

identifier --> my_string.
number --> [].
number --> digit.
number --> digit, number.

string --> [~], char_seq, [~].
string --> [~], number, [~].
string --> [~], my_string, [~].
char_seq --> [].
char_seq --> letter.
char_seq --> letter, char_seq.
my_string --> char_seq,number,char_seq.
my_string --> number,char_seq,number.

add_sub_operator --> [+] | [-].
mul_div_operator --> [*] | [/].
comparison_operator --> [<] | [>] | [<=] | [>=] | [==].

letter --> [a] | [b] | [c] | [d] | [e] | [f] | [g] | [h] | [i] | [j] | [k] | [l] | [m] | [n] | [o] | [p] | [q] | [r] | [s] | [t] | [u] | [v] | [w] | [x] | [y] | [z].

digit --> [0] | [1] | [2] | [3] | [4] | [5] | [6] | [7] | [8] | [9].
